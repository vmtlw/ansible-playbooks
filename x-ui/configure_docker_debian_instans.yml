---
- name: Configure Xray server in docker 
  hosts: all
  become: true
  vars_files:
    - vars.yml

  tasks:
    
    - name: Set password for root
      ansible.builtin.user:
        name: root
        password: "{{ password_root | password_hash('sha512') }}"
      become: true

    - name: install docker compose for source-code
      get_url:
        url: 'https://github.com/docker/compose/releases/download/v2.32.1/docker-compose-linux-x86_64'
        dest: /usr/local/bin/docker-compose
        mode: 755

    - name: Set sysctl parameters
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        sysctl_set: yes
        state: present
        reload: yes
      loop:
        - { name: 'net.ipv4.conf.all.forwarding', value: 1 }
        - { name: 'net.ipv6.conf.all.forwarding', value: 1 }
        - { name: 'net.ipv4.ip_forward', value: 1 }
        - { name: 'net.core.default_qdisc', value: 'fq' }
    #    - { name: 'net.ipv4.tcp_congestion_control', value: 'bbr' }

    - name: Create configuration directory if not exists
      ansible.builtin.file:
        path: /usr/local/docker/x-ui
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: fetch docker apt key
      shell: curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -

    - name: Add docker repository
      shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"

    - name: Refresh cache
      apt:
        update_cache: yes

    - name: Ensure required packages are installed
      ansible.builtin.package:
        name:
          - bash-completion
          - neovim
          - git
          - gnupg-agent
          - software-properties-common
          - haveged
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - tree
          - whois
          - ufw
        state: present

    - name: enable and aviable kernel modules for docker host
      shell: modprobe -a br_netfilter ip_tables nf_conntrack_netlink nf_nat overlay xt_conntrack


    - name: Ensure docker service is enabled and started
      ansible.builtin.service:
        name: docker
        enabled: true
        state: started

    - name: Copy configuration files to /usr/local/docker/x-ui
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: '0644'
      loop:
        - { src: 'templates/docker-compose.yml.j2', dest: '/usr/local/docker/x-ui/docker-compose.yml' }
        - { src: 'templates/env.j2', dest: '/usr/local/docker/x-ui/.env' }
        - { src: 'templates/traefik.yml.j2', dest: '/usr/local/docker/x-ui/traefik.yml' }

    #- name: Pull Docker images using docker-compose
    #  community.docker.docker_compose:
    #    project_src: /usr/local/docker/x-ui
    #    pull: yes
  
    #- name: Start Docker containers in detached mode using docker-compose
    #  community.docker.docker_compose:
    #    project_src: /usr/local/docker/x-ui
    #    state: present
    #    detached: yes

    - name: opening 54320, 54327, 54328, 80, 443
      ufw:
        rule: allow
        port: "{{ item }}"
        default: "deny"
        state: enabled
      loop:
        - 54320
        - 54327
        - 54328
        - 80
        - 443
        - 22
